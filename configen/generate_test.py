"""Configuration loader generation"""


from dataclasses import dataclass

from omegaconf import MISSING, II

from .utils import default
from .generate import generate_conf_loader


@dataclass
class ChildChildConf:
    """Child of Child"""
    confcc1: str = MISSING

@dataclass
class ChildConf:
    """Child"""
    confc1: str = MISSING
    confc2: int = MISSING
    confc3: ChildChildConf = default(ChildChildConf())

@dataclass
class GlobalConf:
    """Root"""
    conf1:    str             = MISSING
    conf2:    int             = MISSING
    conf3:    ChildConf       = default(ChildConf(
        confc2=II("..conf2"),))
    children: list[ChildConf] = default(
        [ChildConf(
            confc1=II("...conf1"))])

def test_config():
    """Test config generated by loader-generator."""

    default_conf_str = """
    conf1: hello
    conf2: 3
    conf3:
        confc1: theChild
        confc3:
            confcc1: "${conf1}"
    children:
        -
            confc2: 3
            confc3:
                confcc1: cc11
        -
            confc2: 2
            confc3:
                confcc1: cc12
        -
            confc2: 1
            confc3:
                confcc1: cc13
    """

    load_conf = generate_conf_loader(default_conf_str, GlobalConf)
    conf = load_conf()

    ground_truth = GlobalConf(
        conf1="hello",
        conf2=3,
        conf3=ChildConf(
            confc1="theChild",
            confc2=3,
            confc3=ChildChildConf(
                confcc1="hello")),
        children=[
            ChildConf(
                confc1="hello",
                confc2=3,
                confc3=ChildChildConf(
                    confcc1="cc11")),
            ChildConf(
                confc1="hello",
                confc2=2,
                confc3=ChildChildConf(
                    confcc1="cc12")),
            ChildConf(
                confc1="hello",
                confc2=1,
                confc3=ChildChildConf(
                    confcc1="cc13")),
        ]
    )
    assert conf == ground_truth
